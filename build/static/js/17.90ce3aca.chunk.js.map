{"version":3,"sources":["constants.js","components/organisms/MapSwitcher/index.js"],"names":["LEVEL_STATISTICS","MapSwitcher","data","handleMapSwitch","useMeasure","mapSwitcher","useState","selected","setSelected","handleClick","index","statistic","className","ref","div","map","classnames","onClick","bind","style","width","length","id","replace","parseInt","formatNumber","isEqual","prevProps","currProps","mapStatistic","memo"],"mappings":"gLAOaA,EAAgB,UAPK,CAChC,YACA,eACA,YACA,U,gBCIIC,EAAc,SAAC,GAGd,IAFLC,EAEI,EAFJA,KACAC,EACI,EADJA,gBAEA,EAAsBC,cAAfC,EAAP,oBACA,EAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAc,SAACC,EAAOC,GAC1BH,EAAYE,GACZP,EAAgBQ,IAGlB,OACE,sBAAKC,UAAU,cAAcC,IAAKR,EAAlC,UACE,cAAC,WAASS,IAAV,CAAcF,UAAU,cACvBZ,EAAiBe,KAAI,SAACJ,EAAWD,GAAZ,OACpB,qBAEEE,UAAWI,IAAW,YAAD,aAAmBL,EAAnB,YAAgCJ,IAAWG,EAAX,aAAwBC,EAAxB,aAA8C,KACnGM,QAASR,EAAYS,K,UAAWR,EAAOC,GACvCQ,MAAO,CAACC,MAAM,QAAD,OAAU,IAAMpB,EAAiBqB,OAAjC,OAJf,SAME,sBAAKT,UAAU,mBAAf,UACE,qBAAKU,GAAG,OAAR,SAAgBX,EAAUY,QAAQ,IAAK,OACvC,qBAAKD,GAAG,QAAR,SAAiBE,SAASC,YAAavB,EAAK,GAAD,OAAIS,EAAJ,aAAyB,EAAnD,WAA0Dc,YAAavB,EAAK,GAAD,OAAIS,EAAJ,aAA2Bc,YAAavB,EAAK,GAAD,OAAIS,EAAJ,cACxI,qBAAKW,GAAG,QAAR,SAAiBG,YAAavB,EAAK,GAAD,OAAIS,EAAJ,kBAR/BD,UAgBTgB,EAAU,SAACC,EAAWC,GAC1B,OAAID,EAAUE,eAAiBD,EAAUC,cAM5BC,yBAAK7B,EAAayB","file":"static/js/17.90ce3aca.chunk.js","sourcesContent":["export const PRIMARY_STATISTICS = [\n  'confirmed',\n  'active_cases',\n  'recovered',\n  'death',\n];\n\nexport const LEVEL_STATISTICS = [...PRIMARY_STATISTICS];\n","import classnames from 'classnames';\nimport { memo, useState } from 'react';\nimport { animated} from 'react-spring';\nimport { useMeasure } from 'react-use';\n\nimport { LEVEL_STATISTICS } from '../../../constants';\nimport { formatNumber } from '../../../utils/commonFunctions';\n\nconst MapSwitcher = ({\n  data,\n  handleMapSwitch\n}) => {\n  const [mapSwitcher] = useMeasure();\n  const [selected, setSelected] = useState(0);\n\n  const handleClick = (index, statistic) => {\n    setSelected(index);\n    handleMapSwitch(statistic);\n  };\n\n  return (\n    <div className=\"MapSwitcher\" ref={mapSwitcher}>\n      <animated.div className=\"highlight\"></animated.div>\n      {LEVEL_STATISTICS.map((statistic, index) => (\n        <div\n          key={index}\n          className={classnames('clickable',`is-${statistic} ${selected===index? `is-${statistic}-selected`: ''}`)}\n          onClick={handleClick.bind(this, index, statistic)}\n          style={{width: `calc(${100 / LEVEL_STATISTICS.length}%)`}}\n        >\n          <div className='map-switcher-box'>\n            <div id=\"name\">{statistic.replace('_', ' ')}</div>\n            <div id=\"daily\">{parseInt(formatNumber(data[`${statistic}_daily`]))>0? `+${formatNumber(data[`${statistic}_daily`])}`: formatNumber(data[`${statistic}_daily`])}</div>\n            <div id=\"total\">{formatNumber(data[`${statistic}_total`])}</div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst isEqual = (prevProps, currProps) => {\n  if (prevProps.mapStatistic !== currProps.mapStatistic) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(MapSwitcher, isEqual);\n"],"sourceRoot":""}