{"version":3,"sources":["components/organisms/Table/index.js"],"names":["Table","data","updatedAt","useState","sortColumn","isAscending","sortData","setSortData","states","stateData","setStateData","useEffect","viewData","tempStates","length","forEach","state","push","state_name","daily","confirmed_daily","total","confirmed_total","varyingIcons","className","active_cases_daily","active_cases_total","recovered_daily","recovered_total","death_daily","death_total","tempData","handleSortClick","sortId","sort","firstEl","secondEl","localeCompare","parseInt","reverse","formatDateToText","TABLE_HEADER","map","header","style","textAlign","justifyContent","onClick","bind","name","size","abbreviateNumber","formatNumber"],"mappings":"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","file":"static/js/22.386e8983.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  ArrowUpIcon,\n  ArrowDownIcon,\n  SortAscIcon,\n  SortDescIcon\n} from '@primer/octicons-react';\nimport { formatNumber, formatDateToText, abbreviateNumber } from '../../../utils/commonFunctions';\nimport { TABLE_HEADER } from '../../../constant';\n\nconst Table = ({\n  data,\n  updatedAt\n}) => {\n  const [sortData, setSortData] = useState({\n    sortColumn: 'confirmed_total',\n    isAscending: false\n  });\n  const [stateData, setStateData] = useState({ states: [] });\n\n  useEffect(() => {\n    const viewData = [];\n    const tempStates = stateData.states.length? stateData.states: data.states;\n    if (stateData.states.length === 0) {\n      tempStates.forEach(state => {\n        viewData.push(state.state_name);\n        viewData.push({ daily: state.confirmed_daily, total: state.confirmed_total, varyingIcons: false, className: 'confirmed-daily' });\n        viewData.push({ daily: state.active_cases_daily, total: state.active_cases_total, varyingIcons: true, className: state.active_cases_daily>0? 'active-cases-daiy-up': 'active-cases-daiy-down' });\n        viewData.push({ daily: state.recovered_daily, total: state.recovered_total, varyingIcons: false, className: 'recovered-daily' });\n        viewData.push({ daily: state.death_daily, total: state.death_total, varyingIcons: false, className: 'death-daily' });\n      });\n      const tempData = { ...data, viewData };\n      setStateData(tempData);\n    }\n  }, [data, stateData.states, stateData, setStateData]);\n\n  const handleSortClick = sortId => {\n    const viewData = [];\n    const states = [ ...stateData.states ];\n    if (sortData.sortColumn !== sortId) {\n      setSortData({ sortColumn: sortId, isAscending: true });\n      if (sortId === 'regionName') {\n        states.sort((firstEl, secondEl) => {\n          const val = firstEl.state_name.localeCompare(secondEl.state_name);\n          return val;\n        });\n      } else {\n        states.sort((firstEl, secondEl) => {\n          if(parseInt(firstEl[sortId]) > parseInt(secondEl[sortId])) return 1;\n          if(parseInt(firstEl[sortId]) < parseInt(secondEl[sortId])) return -1;\n          return 0;\n        });\n      }\n    } else {\n      setSortData({ sortColumn: sortData.sortColumn, isAscending: !sortData.isAscending });\n      states.reverse();\n    }\n    states.forEach(state => {\n      viewData.push(state.state_name);\n      viewData.push({ daily: state.confirmed_daily, total: state.confirmed_total, varyingIcons: false, className: 'confirmed-daily' });\n      viewData.push({ daily: state.active_cases_daily, total: state.active_cases_total, varyingIcons: true, className: state.active_cases_daily>0? 'active-cases-daiy-up': 'active-cases-daiy-down' });\n      viewData.push({ daily: state.recovered_daily, total: state.recovered_total, varyingIcons: false, className: 'recovered-daily' });\n      viewData.push({ daily: state.death_daily, total: state.death_total, varyingIcons: false, className: 'death-daily' });\n    });\n    setStateData({ ...stateData, states, viewData });\n  };\n\n  return <>\n    <div className=\"last-update-text above-table\">Last Updated on {formatDateToText(updatedAt)}</div>\n    <div className=\"table fadeInUp\">\n    {TABLE_HEADER.map(header =>\n      <div\n        className=\"cell heading\"\n        style={{ textAlign: 'start', justifyContent: 'space-around' }}\n        onClick={handleSortClick.bind(this, header.sortId)}\n      >\n        <div>{header.name}</div>\n        {\n          sortData.sortColumn === header.sortId && (\n            <div className={'sort-icon'}>\n              {sortData.isAscending ? (\n                <SortAscIcon size={12} />\n              ) : (\n                <SortDescIcon size={12} />\n              )}\n            </div>)\n        }\n      </div>\n    )}\n\n    {stateData.viewData && stateData.viewData.map(state => {\n      return state.daily || state.total?\n        <div className={`cell body`} >\n          <div key={state.total} className={state.className}>\n            {state.daily?\n              <>\n                {state.varyingIcons?\n                  state.daily>0? <ArrowUpIcon size={16} />: <ArrowDownIcon size={16} />\n                : <ArrowUpIcon size={16} />}\n                {abbreviateNumber(state.daily)}\n              </>\n            : null}\n          </div>\n          <div>{formatNumber(state.total)}</div>\n        </div>\n        : <div className=\"cell body\" style={{ justifyContent: 'center' }}>\n          <div key={state} style={{ textAlign: 'start' }}>{state}</div>\n        </div>\n    })}\n    </div>\n  </>\n}\n\nexport default Table;\n"],"sourceRoot":""}