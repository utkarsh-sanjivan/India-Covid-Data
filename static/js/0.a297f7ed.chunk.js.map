{"version":3,"sources":["../node_modules/classnames/index.js","components/atoms/SwitchButton/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","SwitchButton","defaultChecked","onChange","disabled","className","useState","toggle","setToggle","useEffect","toggleClasses","onClick","type"],"mappings":";0HAAA,OAOC,WACA,aAEA,IAAIA,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IACxB,GAAIA,EAAID,OAAQ,CACf,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,SAGT,GAAgB,WAAZJ,EACV,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACrC,IAAK,IAAIG,KAAOV,EACXP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,IAChCd,EAAQM,KAAKQ,QAIfd,EAAQM,KAAKF,EAAIO,aAKpB,OAAOX,EAAQgB,KAAK,KAGgBC,EAAOC,SAC3CnB,EAAWoB,QAAUpB,EACrBkB,EAAOC,QAAUnB,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aA5CP,I,4FC2CcqB,UA9CM,SAAC,GAKf,IAJLC,EAII,EAJJA,eACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,SACAC,EACI,EADJA,UAEA,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACJP,IACFM,EAAUN,GACe,oBAAbC,GACVA,GAAUI,MAGb,CAACL,EAAgBC,EAAUI,IAE9B,IAQMG,EAAgB9B,IAAW,aAAc,CAC7C,sBAAuB2B,EACvB,uBAAwBH,GACvBC,GAEH,OACE,sBAAKM,QAde,WACfP,IACLI,GAAYD,GACa,oBAAbJ,GACVA,GAAUI,KAUiBF,UAAWK,EAAxC,UACE,sBAAKL,UAAU,uBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,2BAEF,qBAAKA,UAAU,qBAAf,SACE,8BAGJ,qBAAKA,UAAU,sBACf,uBAAOA,UAAU,mBAAmBO,KAAK,WAAW,aAAW","file":"static/js/0.a297f7ed.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport './index.scss';\n\nconst SwitchButton = ({\n  defaultChecked,\n  onChange,\n  disabled,\n  className\n}) => {\n  const [toggle, setToggle] = useState(false);\n\n  useEffect(() => {\n    if (defaultChecked) {\n      setToggle(defaultChecked);\n      if ( typeof onChange === 'function' ) {\n        onChange(!toggle);\n      }\n    }\n  }, [defaultChecked, onChange, toggle]);\n\n  const triggerToggle = () => {\n    if ( disabled ) { return; }\n    setToggle( !toggle );\n    if ( typeof onChange === 'function' ) {\n      onChange(!toggle);\n    }\n  }\n\n  const toggleClasses = classNames('wrg-toggle', {\n    'wrg-toggle--checked': toggle,\n    'wrg-toggle--disabled': disabled\n  }, className);\n\n  return(\n    <div onClick={triggerToggle} className={toggleClasses}>\n      <div className=\"wrg-toggle-container\">\n        <div className=\"wrg-toggle-check\">\n          <span></span>\n        </div>\n        <div className=\"wrg-toggle-uncheck\">\n          <span></span>\n        </div>\n      </div>\n      <div className=\"wrg-toggle-circle\"></div>\n      <input className=\"wrg-toggle-input\" type=\"checkbox\" aria-label=\"Toggle Button\" />\n    </div>\n  )\n}\n\nexport default SwitchButton;"],"sourceRoot":""}