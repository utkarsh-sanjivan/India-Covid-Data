{"version":3,"sources":["components/organisms/Graph/index.js"],"names":["BarGraph","lazy","retry","PieGraph","RangeButton","SwitchButton","Graphs","timeline","updatedAt","currentStatistic","pieLabel","pieDailyData","pieTotalData","useState","timelineData","setTimelineData","active","confirmed","deaths","recovered","graphData","setGraphData","useEffect","slice","map","time","active_cases_daily","confirmed_daily","death_daily","recovered_daily","className","formatDateToText","defaultChecked","onChange","checked","suffix","disabled","onClick","range","isSelected","labels","date","data","title","backgroundColor","pieData"],"mappings":"4LAKMA,EAAWC,gBAAK,kBAAMC,aAAM,kBAAM,2DAClCC,EAAWF,gBAAK,kBAAMC,aAAM,kBAAM,2DAClCE,EAAcH,gBAAK,kBAAMC,aAAM,kBAAM,qCACrCG,EAAeJ,gBAAK,kBAAMC,aAAM,kBAAM,mCA+G7BI,UA7GA,SAAC,GAOT,IANLC,EAMI,EANJA,SACAC,EAKI,EALJA,UACAC,EAII,EAJJA,iBACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,aACAC,EACI,EADJA,aAEA,EAAwCC,mBAAS,MAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCF,mBAAS,CACzCG,OAAQ,KACRC,UAAW,KACXC,OAAQ,KACRC,UAAW,OAJb,mBAAOC,EAAP,KAAkBC,EAAlB,KAOAC,qBAAU,WACRP,EAAgBR,EAASgB,OAAO,OAC/B,CAAChB,IAEJe,qBAAU,WACJR,GACFO,EAAa,CACXL,OAAQF,EAAaU,KAAI,SAAAC,GAAI,OAAIA,EAAKC,sBACtCT,UAAWH,EAAaU,KAAI,SAAAC,GAAI,OAAIA,EAAKE,mBACzCT,OAAQJ,EAAaU,KAAI,SAAAC,GAAI,OAAIA,EAAKG,eACtCT,UAAWL,EAAaU,KAAI,SAAAC,GAAI,OAAIA,EAAKI,uBAG5C,CAACf,IAiBJ,OAAO,qBAAKgB,UAAU,QAAf,SAEFhB,EACA,qCACC,qBAAKgB,UAAU,aAAf,mBACA,sBAAKA,UAAU,mBAAf,6BAAmDC,YAAiBvB,MACpE,sBAAKsB,UAAU,0BAAf,UACE,qBAAKA,UAAU,sBAAf,mBACA,cAACzB,EAAD,CACE2B,gBAAgB,EAChBC,SAzBW,SAAAC,GACnB,IAAMC,EAASD,EAAS,SAAU,SAClCb,EAAa,CACXL,OAAQF,EAAaU,KAAI,SAAAC,GAAI,OAAIA,EAAK,eAAD,OAAgBU,OACrDlB,UAAWH,EAAaU,KAAI,SAAAC,GAAI,OAAIA,EAAK,YAAD,OAAaU,OACrDjB,OAAQJ,EAAaU,KAAI,SAAAC,GAAI,OAAIA,EAAK,QAAD,OAASU,OAC9ChB,UAAWL,EAAaU,KAAI,SAAAC,GAAI,OAAIA,EAAK,YAAD,OAAaU,UAoB/CC,UAAU,EACVN,UAAW,KAEb,qBAAKA,UAAU,sBAAf,4BAEF,cAAC1B,EAAD,CACEiC,QAtBkB,SAAAC,GACnBA,GAAOvB,EAAgBR,GAC5BQ,EAAgBR,EAASgB,OAAO,EAAEe,KAqB5BC,WAAY,IAEd,cAACvC,EAAD,CACEwC,OAAQ1B,EAAaU,KAAI,SAAAC,GAAI,OAAIA,EAAKgB,QACtCC,KAAMtB,EAAUH,UAChB0B,MAAM,YACNC,gBAAiB,YACjBd,UAAW,oBAEb,cAAC9B,EAAD,CACEwC,OAAQ1B,EAAaU,KAAI,SAAAC,GAAI,OAAIA,EAAKgB,QACtCC,KAAMtB,EAAUJ,OAChB2B,MAAM,SACNC,gBAAiB,UACjBd,UAAW,iBAEb,cAAC9B,EAAD,CACEwC,OAAQ1B,EAAaU,KAAI,SAAAC,GAAI,OAAIA,EAAKgB,QACtCC,KAAMtB,EAAUD,UAChBwB,MAAM,YACNC,gBAAiB,UACjBd,UAAW,oBAEb,cAAC9B,EAAD,CACEwC,OAAQ1B,EAAaU,KAAI,SAAAC,GAAI,OAAIA,EAAKgB,QACtCC,KAAMtB,EAAUF,OAChByB,MAAM,SACNC,gBAAiB,UACjBd,UAAW,gBAEb,cAAC3B,EAAD,CACEwC,MAAK,UAAKlC,EAAL,qBACLC,SAAUA,EACVmC,QAASlC,IAEX,cAACR,EAAD,CACEwC,MAAK,UAAKlC,EAAL,qBACLC,SAAUA,EACVmC,QAASjC,OAtDE","file":"static/js/12.bec21350.chunk.js","sourcesContent":["import { lazy, useState, useEffect } from 'react';\nimport './index.scss';\n\nimport { retry, formatDateToText } from '../../../utils/commonFunctions';\n\nconst BarGraph = lazy(() => retry(() => import('../../molecules/BarGraph')));\nconst PieGraph = lazy(() => retry(() => import('../../molecules/PieGraph')));\nconst RangeButton = lazy(() => retry(() => import('../../molecules/RangeButtons')));\nconst SwitchButton = lazy(() => retry(() => import('../../atoms/SwitchButton')));\n\nconst Graphs = ({\n  timeline,\n  updatedAt,\n  currentStatistic,\n  pieLabel,\n  pieDailyData,\n  pieTotalData\n}) => {\n  const [timelineData, setTimelineData] = useState(null);\n  const [graphData, setGraphData] = useState({\n    active: null,\n    confirmed: null,\n    deaths: null,\n    recovered: null\n  });\n  \n  useEffect(() => {\n    setTimelineData(timeline.slice(-30));\n  }, [timeline]);\n\n  useEffect(() => {\n    if (timelineData) {\n      setGraphData({\n        active: timelineData.map(time => time.active_cases_daily),\n        confirmed: timelineData.map(time => time.confirmed_daily),\n        deaths: timelineData.map(time => time.death_daily),\n        recovered: timelineData.map(time => time.recovered_daily)\n      });\n    }\n  }, [timelineData])\n\n  const handleChange = checked => {\n    const suffix = checked? '_total': '_daily';\n    setGraphData({\n      active: timelineData.map(time => time[`active_cases${suffix}`]),\n      confirmed: timelineData.map(time => time[`confirmed${suffix}`]),\n      deaths: timelineData.map(time => time[`death${suffix}`]),\n      recovered: timelineData.map(time => time[`recovered${suffix}`])\n    });\n  }\n\n  const handleRangeChange = range => {\n    if (!range) setTimelineData(timeline);\n    setTimelineData(timeline.slice(-1*range));\n  }\n\n  return <div className=\"Graph\">\n    {\n      !timelineData? <div>Loading...</div>\n      :<>\n        <div className=\"india-text\">India</div>\n        <div className=\"last-update-text\">Last Updated on {formatDateToText(updatedAt)}</div>\n        <div className=\"toogle-button-container\">\n          <div className=\"toggle-button-label\">Daily</div>\n          <SwitchButton \n            defaultChecked={false}\n            onChange={handleChange}\n            disabled={false}\n            className={''}\n            />\n          <div className=\"toggle-button-label\">Commulative</div>\n        </div>\n        <RangeButton \n          onClick={handleRangeChange}\n          isSelected={0}\n        />\n        <BarGraph\n          labels={timelineData.map(time => time.date)}\n          data={graphData.confirmed}\n          title=\"Confirmed\"\n          backgroundColor={'#ff073a99'}\n          className={'confirmed-graph'}\n        />\n        <BarGraph\n          labels={timelineData.map(time => time.date)}\n          data={graphData.active}\n          title=\"Active\"\n          backgroundColor={'#007bff'}\n          className={'active-graph'}\n        />\n        <BarGraph\n          labels={timelineData.map(time => time.date)}\n          data={graphData.recovered}\n          title=\"Recovered\"\n          backgroundColor={'#28a745'}\n          className={'recovered-graph'}\n        />\n        <BarGraph\n          labels={timelineData.map(time => time.date)}\n          data={graphData.deaths}\n          title=\"Deaths\"\n          backgroundColor={'#6c757d'}\n          className={'death-graph'}\n        />\n        <PieGraph\n          title={`${currentStatistic} Daily Comparison`}\n          pieLabel={pieLabel}\n          pieData={pieDailyData}\n        />\n        <PieGraph\n          title={`${currentStatistic} Total Comparison`}\n          pieLabel={pieLabel}\n          pieData={pieTotalData}\n        />\n      </>\n    }\n  </div>\n}\n\nexport default Graphs;\n"],"sourceRoot":""}